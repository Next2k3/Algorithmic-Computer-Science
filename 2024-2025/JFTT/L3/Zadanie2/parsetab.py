
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVMODrightPOWBRACKET_CLOSE BRACKET_OPEN COM DIV MINUS MOD MULT NUM PLUS POWstart : EXPRESSIONstart : COMEXPRESSION : NUMEXPRESSION : MINUS NUMEXPRESSION : BRACKET_OPEN EXPRESSION BRACKET_CLOSEEXPRESSION : EXPRESSION PLUS EXPRESSIONEXPRESSION : EXPRESSION MINUS EXPRESSIONEXPRESSION : EXPRESSION MULT EXPRESSIONEXPRESSION : EXPRESSION DIV EXPRESSIONEXPRESSION : EXPRESSION MOD EXPRESSIONEXPRESSION : EXPRESSION POW EXPRESSION'
    
_lr_action_items = {'COM':([0,],[3,]),'NUM':([0,5,6,7,8,9,10,11,12,],[4,13,4,4,4,4,4,4,4,]),'MINUS':([0,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[5,8,-3,5,5,5,5,5,5,5,-4,8,-6,-7,-8,-9,-10,-11,-5,]),'BRACKET_OPEN':([0,6,7,8,9,10,11,12,],[6,6,6,6,6,6,6,6,]),'$end':([1,2,3,4,13,15,16,17,18,19,20,21,],[0,-1,-2,-3,-4,-6,-7,-8,-9,-10,-11,-5,]),'PLUS':([2,4,13,14,15,16,17,18,19,20,21,],[7,-3,-4,7,-6,-7,-8,-9,-10,-11,-5,]),'MULT':([2,4,13,14,15,16,17,18,19,20,21,],[9,-3,-4,9,9,9,-8,-9,-10,-11,-5,]),'DIV':([2,4,13,14,15,16,17,18,19,20,21,],[10,-3,-4,10,10,10,-8,-9,-10,-11,-5,]),'MOD':([2,4,13,14,15,16,17,18,19,20,21,],[11,-3,-4,11,11,11,-8,-9,-10,-11,-5,]),'POW':([2,4,13,14,15,16,17,18,19,20,21,],[12,-3,-4,12,12,12,12,12,12,12,-5,]),'BRACKET_CLOSE':([4,13,14,15,16,17,18,19,20,21,],[-3,-4,21,-6,-7,-8,-9,-10,-11,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'EXPRESSION':([0,6,7,8,9,10,11,12,],[2,14,15,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> EXPRESSION','start',1,'p_start','zad2.py',25),
  ('start -> COM','start',1,'p_start_com','zad2.py',32),
  ('EXPRESSION -> NUM','EXPRESSION',1,'p_expression_number','zad2.py',36),
  ('EXPRESSION -> MINUS NUM','EXPRESSION',2,'p_expression_neg','zad2.py',42),
  ('EXPRESSION -> BRACKET_OPEN EXPRESSION BRACKET_CLOSE','EXPRESSION',3,'p_expression_group','zad2.py',49),
  ('EXPRESSION -> EXPRESSION PLUS EXPRESSION','EXPRESSION',3,'p_expression_plus','zad2.py',53),
  ('EXPRESSION -> EXPRESSION MINUS EXPRESSION','EXPRESSION',3,'p_expression_minus','zad2.py',60),
  ('EXPRESSION -> EXPRESSION MULT EXPRESSION','EXPRESSION',3,'p_expression_mult','zad2.py',67),
  ('EXPRESSION -> EXPRESSION DIV EXPRESSION','EXPRESSION',3,'p_expression_div','zad2.py',74),
  ('EXPRESSION -> EXPRESSION MOD EXPRESSION','EXPRESSION',3,'p_expression_mod','zad2.py',84),
  ('EXPRESSION -> EXPRESSION POW EXPRESSION','EXPRESSION',3,'p_expression_pow','zad2.py',91),
]
